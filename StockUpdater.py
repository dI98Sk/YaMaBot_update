import gspread
import requests
import json
from datetime import datetime
from oauth2client.service_account import ServiceAccountCredentials


class StockUpdaterFBS:
    def __init__(self, spreadsheet_url, credentials_file, oauth_token, warehouse_id, campaign_id):
        self.SPREADSHEET_URL = spreadsheet_url
        self.CREDENTIALS_FILE = credentials_file
        self.OAUTH_TOKEN = oauth_token
        self.WAREHOUSE_ID = warehouse_id
        self.headers_auth = {
            "Authorization": f"Bearer {self.OAUTH_TOKEN}",
            "Content-Type": "application/json"
        }

        self.CAMPAIGN_ID = campaign_id
        # self.CAMPAIGN_ID = self.get_campaign_id()

        self.scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
        self.creds = ServiceAccountCredentials.from_json_keyfile_name(self.CREDENTIALS_FILE, self.scope)
        self.client = gspread.authorize(self.creds)
        self.sheet = self.client.open_by_url(self.SPREADSHEET_URL).sheet1

    def get_warehouses(self):
        url = f"https://api.partner.market.yandex.ru/v2/campaigns/{self.CAMPAIGN_ID}/warehouses"
        response = requests.get(url, headers=self.headers_auth)
        if response.status_code == 200:
            warehouses = response.json().get("warehouses", [])
            ids = [w["id"] for w in warehouses]
            print(f"[‚ÑπÔ∏è] –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫–ª–∞–¥—ã –∫–∞–º–ø–∞–Ω–∏–∏ {self.CAMPAIGN_ID}: {ids}")
            return ids
        else:
            print(f"[‚ùå] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {response.status_code}")
            print(response.text)
            return []

    def get_campaign_id(self):
        url = "https://api.partner.market.yandex.ru/v2/campaigns"
        response = requests.get(url, headers=self.headers_auth)
        if response.status_code == 200:
            data = response.json()
            print("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏:", data)  # ‚¨ÖÔ∏è
            for campaign in data.get("campaigns", []):
                if campaign.get("placementType") == "FBS":
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–∞–º–ø–∞–Ω–∏—è FBS: {campaign['id']}")
                    return campaign["id"]
        else:
            print(f"[‚ùå] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è campaignId: {response.status_code}")
            print(response.text)
        return None

    def find_campaign_with_warehouse(self, target_warehouse_id):
        url = "https://api.partner.market.yandex.ru/v2/campaigns"
        response = requests.get(url, headers=self.headers_auth)
        if response.status_code != 200:
            print("[‚ùå] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–º–ø–∞–Ω–∏–π")
            print(response.text)
            return

        data = response.json()
        for campaign in data.get("campaigns", []):
            campaign_id = campaign["id"]
            placement = campaign.get("placementType")
            if placement != "FBS":
                continue

            url = f"https://api.partner.market.yandex.ru/v2/campaigns/{campaign_id}/warehouses"
            wh_response = requests.get(url, headers=self.headers_auth)
            if wh_response.status_code == 200:
                warehouses = wh_response.json().get("warehouses", [])
                for wh in warehouses:
                    if str(wh["id"]) == str(target_warehouse_id):
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è –∫–∞–º–ø–∞–Ω–∏—è: {campaign_id} —Å –Ω—É–∂–Ω—ã–º —Å–∫–ª–∞–¥–æ–º {target_warehouse_id}")
                        return campaign_id
            else:
                print(f"[‚ö†Ô∏è] –ö–∞–º–ø–∞–Ω–∏—è {campaign_id}: –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ ({wh_response.status_code})")

        print("[‚ùå] –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–∞–º–ø–∞–Ω–∏—è —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–∫–ª–∞–¥–æ–º.")
        return None

    def get_offers_stocks(self):
        rows = self.sheet.get_all_values()[1:]  # –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏
        offers_stocks = []

        for row in rows:
            offer_id = row[1].strip()
            if not offer_id:
                continue

            offers_stocks.append({
                "sku": offer_id,
                "warehouseId": self.WAREHOUSE_ID,
                "items": [{"count": 2, "type": "FIT"}]  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2
            })

        return offers_stocks

    def update_stocks(self, offers_stocks):
        url = f"https://api.partner.market.yandex.ru/v2/campaigns/{self.CAMPAIGN_ID}/warehouses/{self.WAREHOUSE_ID}/stocks"
        print("[üì¶] Payload:")
        print(json.dumps({"skus": offers_stocks}, indent=2, ensure_ascii=False))
        resp = requests.put(url, json={"skus": offers_stocks}, headers=self.headers_auth)

        if resp.status_code == 200:
            print(f"[‚úÖ] –û—Å—Ç–∞—Ç–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {len(offers_stocks)} –ø–æ–∑–∏—Ü–∏–π.")
        else:
            print(f"[‚ùå] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤: {resp.status_code}")
            try:
                print(resp.json())
            except:
                print(resp.text)

    def run(self):
        print(f"[üïí] –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        if not self.CAMPAIGN_ID:
            print("[‚ùå] Campaign ID –Ω–µ –ø–æ–ª—É—á–µ–Ω. –ü—Ä–µ—Ä—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.")
            return

        offers_stocks = self.get_offers_stocks()
        # self.get_warehouses()

        valid_warehouses = self.get_warehouses()
        if self.WAREHOUSE_ID not in [str(w) for w in valid_warehouses]:
            print(f"[‚ùå] –°–∫–ª–∞–¥ {self.WAREHOUSE_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω —É –∫–∞–º–ø–∞–Ω–∏–∏ {self.CAMPAIGN_ID}. –ü—Ä–µ—Ä—ã–≤–∞–µ–º.")
            return

        self.update_stocks(offers_stocks)
        print(f"[üïí] –ó–∞–≤–µ—Ä—à–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")


# –ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞
if __name__ == "__main__":
    updater = StockUpdaterFBS(
        spreadsheet_url="https://docs.google.com/spreadsheets/d/1-0fSX404BKuzZRCgVflyNT-4icIDOnmF4cyaHdkrz6Y/edit",
        credentials_file="credentials.json",
        oauth_token="y0__xDEs9qFCBi8wTcg2-3egBMXHkXGe2pQwTFnO0gJ5AnWgTeC7Q",
        warehouse_id="1749666",
        campaign_id='143409656'
    )
    # updater.run()
    campaign_id = updater.find_campaign_with_warehouse("1749666")
    if campaign_id:
        updater.CAMPAIGN_ID = campaign_id
        updater.run()

    # –£ —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ FBS-–∫–∞–º–ø–∞–Ω–∏–π:
    # - 143409656 ‚Üí MobileBox ‚úÖ
    # - 147323103 ‚Üí Android stock ‚úÖ
    # - 148619429 ‚Üí Apple Stock ‚úÖ